-- File Trajectoire.bod
-- generated by Atelier-B/tbada on Sat Apr 17 11:50:07 2021
-- from input_file Trajectoire.imp, checksum 8991af00ac579b0ca1b62c385334fc3f

-- Trajectoire_i
-- * Authors: Indie Blanc, Florian Cohen--Urrutia, Olivier Baconnais, Roman BADANIN
-- * Creation date: 19.03.2021
package body Trajectoire is
	
	--------------------
	-- INITIALISATION --
	--------------------
	procedure IMPORTS(this : in PTR_Trajectoire) is
	begin
		-- IMPORTS Clause
		-- IMPORTS Aiguilleur
		this.ref_Aiguilleur := new Aiguilleur.TYPE_Aiguilleur ;
		Aiguilleur.IMPORTS(this.ref_Aiguilleur) ;
		-- IMPORTS CapteursTrajectoire
		this.ref_CapteursTrajectoire := new
			CapteursTrajectoire.TYPE_CapteursTrajectoire ;
		CapteursTrajectoire.IMPORTS(this.ref_CapteursTrajectoire) ;
		-- IMPORTS RegulateursTrajectoire
		this.ref_RegulateursTrajectoire := new
			RegulateursTrajectoire.TYPE_RegulateursTrajectoire ;
		RegulateursTrajectoire.IMPORTS(this.ref_RegulateursTrajectoire) ;
		-- Component does not extend any machine
		null ;
		-- Instance is not initialised
		this.initialisation := FALSE ;
	end IMPORTS ;
	-- SEES Contexte
	procedure SET_Contexte(
		this : in PTR_Trajectoire ;
		new_Contexte : Contexte.PTR_Contexte) is
	begin
		this.ref_Contexte := new_Contexte ;
	end SET_Contexte ;
	procedure INITIALISATION(this : in PTR_Trajectoire) is
	begin
		if (this.initialisation = TRUE)
		then
			return ;
		end if ;
		this.initialisation := TRUE ;
		-- Initialisation of imported machines
		Aiguilleur.INITIALISATION(this.ref_Aiguilleur) ;
		CapteursTrajectoire.INITIALISATION(this.ref_CapteursTrajectoire) ;
		RegulateursTrajectoire.INITIALISATION(this.ref_RegulateursTrajectoire) ;
		-- Initialisation of seen machines
		Contexte.INITIALISATION(this.ref_Contexte) ;
	end INITIALISATION ;
	----------------
	-- OPERATIONS --
	----------------
	procedure #trajectoire#VerifVitesse(this : in PTR_Trajectoire) is
		#trajectoire#VerifVitesse#1#vitesse : INTEGER ;
		#trajectoire#VerifVitesse#1#vitA : INTEGER ;
		#trajectoire#VerifVitesse#1#diffV : INTEGER ;
	begin
		CapteursTrajectoire.#capteurstrajectoire#RecupVitesse(
			this.ref_CapteursTrajectoire,
			#trajectoire#VerifVitesse#1#vitesse) ;
		Aiguilleur.#aiguilleur#CalculVitesse(
			this.ref_Aiguilleur,
			#trajectoire#VerifVitesse#1#vitA) ;
		if (not(#trajectoire#VerifVitesse#1#vitesse =
			#trajectoire#VerifVitesse#1#vitA))
		then
			#trajectoire#VerifVitesse#1#diffV :=
				#trajectoire#VerifVitesse#1#vitA -
				#trajectoire#VerifVitesse#1#vitesse ;
			RegulateursTrajectoire.#regulateurstrajectoire#ModifVitesse(
				this.ref_RegulateursTrajectoire,
				#trajectoire#VerifVitesse#1#diffV) ;
		end if ;
	end #trajectoire#VerifVitesse ;
	
	procedure #trajectoire#VerifTangage(this : in PTR_Trajectoire) is
		#trajectoire#VerifTangage#1#tangage : INTEGER ;
		#trajectoire#VerifTangage#1#tangA : INTEGER ;
		#trajectoire#VerifTangage#1#diffT : INTEGER ;
	begin
		CapteursTrajectoire.#capteurstrajectoire#RecupTangage(
			this.ref_CapteursTrajectoire,
			#trajectoire#VerifTangage#1#tangage) ;
		Aiguilleur.#aiguilleur#CalculTangage(
			this.ref_Aiguilleur,
			#trajectoire#VerifTangage#1#tangA) ;
		if (not(#trajectoire#VerifTangage#1#tangage =
			#trajectoire#VerifTangage#1#tangA))
		then
			#trajectoire#VerifTangage#1#diffT :=
				#trajectoire#VerifTangage#1#tangA -
				#trajectoire#VerifTangage#1#tangage ;
			RegulateursTrajectoire.#regulateurstrajectoire#ModifTangage(
				this.ref_RegulateursTrajectoire,
				#trajectoire#VerifTangage#1#diffT) ;
		end if ;
	end #trajectoire#VerifTangage ;
	
end Trajectoire ;
